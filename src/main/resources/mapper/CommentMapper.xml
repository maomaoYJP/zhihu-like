<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maomao.zhihu.mapper.CommentMapper">

    <resultMap id="BaseResultMap" type="com.maomao.zhihu.entity.Comment">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="parentCommentId" column="parent_comment_id" jdbcType="BIGINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="BIT"/>
        <association property="user"
                     select="com.maomao.zhihu.mapper.UserMapper.getUserById"
                     column="user_id">
        </association>
        <association property="parentComment"
                     select="com.maomao.zhihu.mapper.CommentMapper.getParentCommentByParentCommentId"
                     column="parent_comment_id">
        </association>
        <collection property="replyComments"
                    select="com.maomao.zhihu.mapper.CommentMapper.getDirectReplyByCommentId"
                    column="id">
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id,content,parent_comment_id,
        create_time,is_delete
    </sql>

    <insert id="createPassageCommentMap">
        insert into passage_comment(passage_id, comment_id) values(#{passageId}, #{commentId})
    </insert>

    <insert id="createAnswerCommentMap">
        insert into answer_comment(answer_id, comment_id) values(#{answerId}, #{commentId})
    </insert>

    <insert id="createTalkCommentMap">
        insert into talk_comment(talk_id, comment_id) values(#{talkId}, #{commentId})
    </insert>

    <select id="getTopCommentByPassageIdOrderByTime" resultMap="BaseResultMap">
        SELECT * FROM COMMENT a LEFT JOIN passage_comment b ON a.id = b.comment_id
        LEFT JOIN user_comment c ON a.id = c.comment_id
        WHERE b.passage_id = #{passageId} AND a.parent_comment_id IS NULL AND is_delete = 0
        ORDER BY a.create_time DESC
    </select>

    <resultMap id="ParentCommentResultMap" type="com.maomao.zhihu.entity.Comment">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="parentCommentId" column="parent_comment_id" jdbcType="BIGINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="BIT"/>
        <association property="user"
                     select="com.maomao.zhihu.mapper.UserMapper.getUserById"
                     column="user_id">
        </association>
    </resultMap>
    <select id="getParentCommentByParentCommentId" resultMap="ParentCommentResultMap">
        SELECT * FROM COMMENT a LEFT JOIN user_comment b ON a.id=b.comment_id
        WHERE a.id = #{parentCommentId} and is_delete = 0
    </select>

    <select id="getDirectReplyByCommentId" resultMap="BaseResultMap">
        SELECT * FROM COMMENT LEFT JOIN user_comment b ON id = b.comment_id
        WHERE parent_comment_id = #{commentId} AND parent_comment_id IS NOT NULL AND is_delete = 0
    </select>

    <select id="getTopCommentByAnswerIdOrderByTime" resultMap="BaseResultMap">
        SELECT * FROM COMMENT a LEFT JOIN answer_comment b ON a.id = b.comment_id
        LEFT JOIN user_comment c ON a.id = c.comment_id
        WHERE b.answer_id = #{answerId} AND a.parent_comment_id IS NULL AND is_delete = 0
        ORDER BY a.create_time DESC
    </select>

    <select id="getTopCommentByTalkIdOrderByTime" resultMap="BaseResultMap">
        SELECT * FROM COMMENT a LEFT JOIN talk_comment b ON a.id = b.comment_id
        LEFT JOIN user_comment c ON a.id = c.comment_id
        WHERE b.talk_id = #{talkId} AND a.parent_comment_id IS NULL AND is_delete = 0
        ORDER BY a.create_time DESC
    </select>
</mapper>
