<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maomao.zhihu.mapper.QuestionMapper">

    <resultMap id="BaseResultMap" type="com.maomao.zhihu.entity.Question">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="title" column="title" jdbcType="VARCHAR"/>
            <result property="introduce" column="introduce" jdbcType="VARCHAR"/>
            <result property="picture" column="picture" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="is_delete" jdbcType="BIT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,title,introduce,
        create_time,update_time,is_delete
    </sql>

    <insert id="createUserQuestion">
        INSERT INTO question_user (question_id, user_id) VALUES(#{questionId}, #{userId})
    </insert>

    <insert id="createQuestionAnswerMap">
        insert into question_answer(question_id, answer_id) values(#{questionId}, #{answerId})
    </insert>
    <resultMap id="QuestionAnswerResultMap" type="com.maomao.zhihu.entity.Question">
        <id property="id" column="question_id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="introduce" column="introduce" jdbcType="VARCHAR"/>
        <result property="picture" column="picture" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="BIT"/>
        <association property="user"
                     select="com.maomao.zhihu.mapper.UserMapper.getPassageUserById"
                     column="question_id"/>
        <collection property="answers" ofType="com.maomao.zhihu.entity.Answer">
            <id property="id" column="answerId" jdbcType="BIGINT"/>
            <result property="picture" column="answerPicture" jdbcType="VARCHAR"/>
            <result property="views" column="answerViews" jdbcType="BIGINT"/>
            <result property="content" column="answerContent" jdbcType="VARCHAR"/>
            <result property="createTime" column="answerCreateTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="answerUpdateTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="answerIsDelete" jdbcType="BIT"/>
            <association property="user"
                         select="com.maomao.zhihu.mapper.UserMapper.getUserById"
                         column="user_id"/>
        </collection>
    </resultMap>

    <resultMap id="QuestionRaiseResultMap" type="com.maomao.zhihu.entity.Question">
        <id property="id" column="question_id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="introduce" column="introduce" jdbcType="VARCHAR"/>
        <result property="picture" column="picture" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="BIT"/>
        <association property="user"
                     select="com.maomao.zhihu.mapper.UserMapper.getPassageUserById"
                     column="question_id"/>
        <collection property="answers" select="com.maomao.zhihu.mapper.AnswerMapper.getAnswerById" column="id">
        </collection>
    </resultMap>
    <resultMap id="ManyQuestionResultMap" type="com.maomao.zhihu.entity.Question">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="introduce" column="introduce" jdbcType="VARCHAR"/>
        <result property="picture" column="picture" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="BIT"/>
        <association property="user"
                     select="com.maomao.zhihu.mapper.UserMapper.getPassageUserById"
                     column="question_id"/>
        <collection property="answers" select="com.maomao.zhihu.mapper.AnswerMapper.getAnswerById" column="id"/>
    </resultMap>
    <select id="getQuestionById" resultMap="QuestionAnswerResultMap">
        SELECT c.id,c.title,c.introduce,c.picture,c.create_time,c.update_time,c.is_delete,b.question_id,d.user_id,
        a.id answerId, a.content answerContent,a.picture answerPicture,a.views answerViews,a.create_time answerCreateTime,
        a.update_time answerUpdateTime,a.is_delete answerIsDelete
        FROM answer a LEFT JOIN question_answer b ON a.id = b.answer_id AND a.is_delete = 0
        LEFT JOIN question c ON b.question_id = c.id and c.is_delete = 0
        LEFT JOIN answer_user d ON d.answer_id = a.id
        WHERE d.user_id = #{id}
    </select>
    <select id="searchAllQuestion" resultMap="ManyQuestionResultMap">
        SELECT * FROM question a LEFT JOIN question_user b ON a.id = b.question_id
        WHERE is_delete = 0 AND (a.title LIKE #{keyword} OR a.introduce LIKE #{keyword})
    </select>

    <select id="getManyQuestion" resultMap="ManyQuestionResultMap">
        SELECT * FROM question a LEFT JOIN question_user b ON a.id = b.question_id
        where is_delete = 0
    </select>
    <select id="getQuestionRaise" resultMap="QuestionRaiseResultMap">
        SELECT * FROM (SELECT * FROM question_user WHERE user_id = #{id}) a LEFT JOIN question b ON a.question_id = b.id
    </select>

    <resultMap id="singleAnswer" type="com.maomao.zhihu.entity.Question">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="introduce" column="introduce" jdbcType="VARCHAR"/>
        <result property="picture" column="picture" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="BIT"/>
        <association property="user"
                     select="com.maomao.zhihu.mapper.UserMapper.getPassageUserById"
                     column="question_id"/>
        <collection property="answers" select="com.maomao.zhihu.mapper.AnswerMapper.getAnswerByAnswerId" column="answer_id">

        </collection>
    </resultMap>
    <select id="getQuestionByAnswerId" resultMap="singleAnswer">
         SELECT * FROM question a LEFT JOIN  question_answer b ON a.id = b.question_id
        WHERE b.answer_id = #{answerId}
    </select>

    <resultMap id="QuestionResultMap" type="com.maomao.zhihu.entity.Question">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="introduce" column="introduce" jdbcType="VARCHAR"/>
        <result property="picture" column="picture" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="BIT"/>
        <association property="user"
                     select="com.maomao.zhihu.mapper.UserMapper.getPassageUserById"
                     column="id"/>
        <collection property="answers" select="com.maomao.zhihu.mapper.AnswerMapper.getAnswerByQuestionId" column="id"/>
    </resultMap>
    <select id="getQuestionByQuestionId" resultMap="QuestionResultMap">
          SELECT id,title,introduce,create_time,update_time,is_delete  FROM question
          WHERE id = #{questionId}
    </select>

    <select id="searchUserQuestion" resultMap="QuestionAnswerResultMap">
        SELECT c.id,c.title,c.introduce,c.picture,c.create_time,c.update_time,c.is_delete,b.question_id,d.user_id,
        a.id answerId, a.content answerContent,a.picture answerPicture,a.views answerViews,a.create_time answerCreateTime,
        a.update_time answerUpdateTime,a.is_delete answerIsDelete
        FROM answer a LEFT JOIN question_answer b ON a.id = b.answer_id
        LEFT JOIN question c ON b.question_id = c.id
        LEFT JOIN answer_user d ON d.answer_id = a.id
        WHERE d.user_id = #{userId} AND a.is_delete = 0 AND c.is_delete = 0 and (c.title like #{keyword} OR c.introduce LIKE #{keyword})
    </select>
    <select id="getQuestionCountByAnswerId" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM question_answer a LEFT JOIN
        (SELECT b.question_id FROM answer a LEFT JOIN question_answer b ON a.id = b.answer_id
        WHERE a.id = #{answerId}) b ON a.question_id = b.question_id
        WHERE b.question_id IS NOT NULL
    </select>

    <select id="getSingleQuestionByAnswerId" resultType="com.maomao.zhihu.entity.Question">
        SELECT * FROM question_answer a
        LEFT JOIN question b ON a.question_id = b.id
        WHERE a.answer_id = #{answerId}
    </select>
</mapper>
